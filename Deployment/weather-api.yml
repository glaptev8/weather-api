apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-api-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: weather-api
  template:
    metadata:
      labels:
        app: weather-api
    spec:
      containers:
        - name: weather-api
          image: "glaptev8/weatherapi:v0.0"
          imagePullPolicy: Always
          env:
            - name: SPRING_DATASOURCE_URL
              value: "r2dbc:pool:postgres://postgres-service:5432/postgres"
            - name: LIQUIBASE_DATASOURCE_URL
              value: "jdbc:postgresql://postgres-service:5432/postgres"
            - name: SPRING_DATASOURCE_USERNAME
              value: "postgres"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "postgres"
            - name: SPRING_REDIS_HOST
              value: "redis-weather-service"
            - name: SPRING_REDIS_PORT
              value: "6379"
          ports:
            - containerPort: 8082
---
apiVersion: v1
kind: Service
metadata:
  name: weather-api-service
spec:
  selector:
    app: weather-api
  ports:
    - protocol: TCP
      port: 8082
      targetPort: 8082
  type: NodePort # возможно стоит использовать LoadBalancer, но это уже после деплоимента в облако
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-weather
spec:
  serviceName: "redis-weather-service"
  replicas: 1
  selector:
    matchLabels:
      app: redis-weather
  template:
    metadata:
      labels:
        app: redis-weather
    spec:
      containers:
        - name: redis
          image: "redis:latest"
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 3Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-weather-service
spec:
  selector:
    app: redis-weather
  ports:
    - protocol: TCP
      port: 6379
  type: ClusterIP